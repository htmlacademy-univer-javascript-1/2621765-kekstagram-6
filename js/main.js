const NAMES = [
  "Александр", "Мария", "Дмитрий", "Елена", "Сергей",
  "Анна", "Андрей", "Ольга", "Николай", "Татьяна",
  "Виктор", "Ирина", "Павел", "Наталья", "Михаил",
  "Екатерина", "Владимир", "Юлия", "Константин", "Светлана",
  "Игорь", "Ксения", "Роман", "Олеся", "Валерий"
];

const MESSAGE = [
  'Всё отлично!',
  'В целом всё неплохо. Но не всё.',
  'Когда вы делаете фотографию, хорошо бы убирать палец из кадра. В конце концов это просто непрофессионально.',
  'Моя бабушка случайно чихнула с фотоаппаратом в руках и у неё получилась фотография лучше.',
  'Я поскользнулся на банановой кожуре и уронил фотоаппарат на кота и у меня получилась фотография лучше.',
  'Лица у людей на фотке перекошены, как будто их избивают. Как можно было поймать такой неудачный момент?!'
];

const descriptions = [
  "Закат над морем с яркими оранжево-розовыми оттенками",
  "Горы, покрытые густым зелёным лесом под ясным небом",
  "Полет белого воздушного шара над зелёными полями",
  "Старинный деревянный мост через спокойную речку",
  "Крупный план цветка с каплями росы на лепестках",
  "Песчаный пляж с морскими волнами и ракушками на берегу",
  "Городской пейзаж с небоскрёбами и огнями вечернего города",
  "Заснеженный лес с пушистыми ветвями и голубым небом",
  "Портрет улыбающегося человека в солнечных очках",
  "Морозный зимний закат с ярким розовым светом",
  "Озеро с отражением гор и облаков на воде",
  "Дикие лошади бегут по зеленой долине",
  "Осенний парк с жёлтыми и красными листьями на дорожках",
  "Ночной небосклон с множеством ярких звезд",
  "Красочная уличная ярмарка с огнями и людьми",
  "Водопад, падающий с высокой скалы в кристально чистую воду",
  "Поля тюльпанов в различных цветах под голубым небом",
  "Маяк на скале на фоне штормового моря",
  "Пшеничное поле под золотым вечерним солнцем",
  "Старинный замок на вершине холма",
  "Морская бухта с яхтами и голубой водой",
  "Детали старого механического часовщика",
  "Полет орла над горами",
  "Цветущая вишня в весеннем саду",
  "Вид на пустыню с дюнами и заходящим солнцем"
];

const getRandomInteger = (a, b) => {
  const lower = Math.ceil(Math.min(a, b));
  const upper = Math.floor(Math.max(a, b));
  const result = Math.random() * (upper - lower + 1) + lower;
  return Math.floor(result);
};

const generateComment = (usedIds) => {
  let id;
  do {
    id = getRandomInteger(1, 500);
  } while (usedIds.has(id));
  usedIds.add(id);

  return {
    id: id,
    avatar: `img/avatar-${getRandomInteger(1, 6)}.svg`,
    message: MESSAGE[getRandomInteger(0, MESSAGE.length - 1)],
    name: NAMES[getRandomInteger(0, NAMES.length - 1)]
  };
};

const generatePhotoDescription = (i, usedCommentIds) => {
  const commentsCount = getRandomInteger(0, 30);
  const comments = [];
  for (let j = 0; j < commentsCount; j++) {
    comments.push(generateComment(usedCommentIds));
  }

  return {
    id: i,
    url: `photos/${i}.jpg`,
    description: descriptions[i - 1],
    likes: getRandomInteger(15, 200),
    comments: comments
  };
};

const generatePhotoDescriptions = () => {
  const usedCommentIds = new Set();
  const photos = [];
  for (let i = 1; i <= 25; i++) {
    photos.push(generatePhotoDescription(i, usedCommentIds));
  }
  return photos;
};

